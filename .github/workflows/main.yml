name: CI

on: [push, workflow_dispatch]

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Download ngrok
      run: Invoke-WebRequest https://bin.equinox.io/c/bNyj1mQVY4c/ngrok-v3-stable-windows-amd64.zip -OutFile ngrok.zip
      shell: powershell

    - name: Extract ngrok
      run: Expand-Archive ngrok.zip -DestinationPath ngrok
      shell: powershell

    - name: Authenticate ngrok
      run: .\ngrok\ngrok.exe authtoken $Env:NGROK_AUTH_TOKEN
      env:
        NGROK_AUTH_TOKEN: ${{ secrets.NGROK_AUTH_TOKEN }}
      shell: powershell

    - name: Enable RDP (Terminal Services) and firewall
      run: |
        Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' -Name "fDenyTSConnections" -Value 0
        Enable-NetFirewallRule -DisplayGroup "Remote Desktop"
        Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' -Name "UserAuthentication" -Value 1
      shell: powershell

    - name: Ensure runner user exists and set password
      run: |
        if (Get-LocalUser -Name "runneradmin" -ErrorAction SilentlyContinue) {
          Set-LocalUser -Name "runneradmin" -Password (ConvertTo-SecureString -AsPlainText "P@ssw0rd!" -Force)
        } else {
          New-LocalUser -Name "runneradmin" -Password (ConvertTo-SecureString -AsPlainText "P@ssw0rd!" -Force) -FullName "Runner Admin" -Description "User for RDP"
          Add-LocalGroupMember -Group "Administrators" -Member "runneradmin"
        }
      shell: powershell

    - name: Download Pekora Launcher
      run: Invoke-WebRequest -Uri https://github.com/KoroneX/Korone-Bootstrapper/releases/download/v1.7.0.3/PekoraPlayerLauncher-x64.zip -OutFile pekora.zip
      shell: powershell

    - name: Extract Pekora Launcher
      run: Expand-Archive pekora.zip -DestinationPath PekoraLauncher
      shell: powershell

    - name: Create ngrok Tunnel (TCP 3389)
      run: .\ngrok\ngrok.exe tcp 3389
      shell: powershell
